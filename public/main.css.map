{"version":3,"sources":["webpack:///webpack:///client/client/stylesheets/components/_user.scss","webpack:///webpack:///client/client/stylesheets/abstracts/_variables.scss","webpack:///webpack:///client/client/stylesheets/components/_gallery.sass","webpack:///webpack:///client/~/bourbon/app/assets/stylesheets/css3/_flex-box.scss","webpack:///webpack:///client/~/bourbon/app/assets/stylesheets/addons/_prefixer.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["#user-component {\n  width: 100vw;\n}\n\n.user-columns-container {\n  margin-top: 65px;\n  width: 100vw;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  flex-direction: column;\n\n  @include respond-to('xsmall') {\n    flex-direction: row;\n  };\n\n  @include respond-to('small') {\n    flex-direction: row;\n  };\n\n  @include respond-to('medium') {\n    flex-direction: row;\n  };\n\n  @include respond-to('large') {\n    flex-direction: row;\n  };\n}\n\n.user-left {\n  float: left;\n  padding: 15px; \n  flex: 1;\n  text-align: center;\n\n  @include respond-to('xsmall') {\n    flex: 1;\n  };\n\n  @include respond-to('small') {\n    flex: 1;\n  };\n\n  @include respond-to('medium') {\n    flex: 1;\n  };\n\n  @include respond-to('large') {\n    flex: 1;\n  };\n}\n\n.user-right {\n  padding: 15px; \n  float: left;\n  flex: 1;\n\n  @include respond-to('xsmall') {\n    flex: 1;\n  };\n\n  @include respond-to('small') {\n    flex: 2;\n  };\n\n  @include respond-to('medium') {\n    flex: 2;\n  };\n\n  @include respond-to('large') {\n    flex: 3;\n  };\n}\n\n.user-avatar {\n  text-align: center;\n  margin-bottom: 15px;\n}\n\n.user-details {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  flex-wrap: nowrap;\n  align-items: center;\n}\n\n.user-row {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  flex-direction: row;\n  text-align: left;\n  flex-wrap: nowrap;\n  align-items: center;\n}\n.user-icon {\n  margin-right: 15px;\n  flex: 1;\n}\n\n.user-field {\n  margin-right: 15px;\n  flex: 6;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///client/client/stylesheets/components/_user.scss\n **/","////////////////////\n//     COLORS     //\n////////////////////\n\n$dimmer-color: transparentize(#a2b5cd, 0.5);\n$shadow-color: transparentize(black, 0.88);\n\n/////////////////////\n//     SHADOWS     //\n/////////////////////\n\n$box-shadow: 0 1px 6px $shadow-color, 0 1px 4px $shadow-color;\n\n/////////////////////////\n//     BREAKPOINTS     //\n/////////////////////////\n\n$breakpoints: (\n  'xsmall' : 450px,\n  'small'  : 767px,\n  'medium' : 992px,\n  'large'  : 1200px\n);\n\n@mixin respond-to($breakpoint) {\n  // Retrieves the value from the key\n  $value: map-get($breakpoints, $breakpoint);\n\n  // If the key exists in the map\n  @if $value != null {\n    // Prints a media query based on the value\n    @media (min-width: $value) {\n      @content;\n    }\n  }\n\n  // If the key doesn't exist in the map\n  @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Please make sure it is defined in `$breakpoints` map.\";\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///client/client/stylesheets/abstracts/_variables.scss\n **/","#gallery-component {\n  @include display(flex);\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background: $dimmer-color;\n  align-items: center;\n  z-index: 1105;\n\n  .gallery-tile {\n    position: relative;\n    overflow: hidden;\n    margin: auto;\n    box-sizing: border-box;\n    box-shadow: $box-shadow;\n    @include user-select(none);\n\n    .gallery-photo {\n      position: absolute;\n      background-size: cover;\n      background-repeat: no-repeat;\n      overflow: hidden;\n      @include backface-visibility(hidden);\n\n      .overlay {\n        border-bottom: 100px solid yellow;\n        border-left: 100px solid transparent;\n        bottom: 0;\n        height: 0;\n        opacity: .95;\n        position: absolute;\n        right: 0;\n        text-indent: -9999px;\n        @include transition(all .5s ease-out);\n        width: 0; }\n\n      &:hover .overlay {\n        border-bottom: 200vh solid yellow; //size must be double container\n        border-left: 200vw solid transparent; //size must be double container\n        @include transition(all .5s ease-out); }\n\n      .corner-overlay-content {\n        bottom: 15px;\n        color: #333;\n        position: absolute;\n        right: 15px;\n        @include transition(all .5s ease-out); }\n\n      &:hover .corner-overlay-content {\n        opacity: 0;\n        @include transition(all .5s ease-out); }\n\n      .overlay-content {\n        bottom: 0;\n        color: #333;\n        left: 0;\n        opacity: 0;\n        padding: 30px;\n        position: absolute;\n        right: 0;\n        top: 0;\n        @include transition(all .3s ease-out);\n        h2 {\n          border-bottom: 1px solid #333;\n          padding: 0 0 12px; } }\n\n      &:hover .overlay-content {\n        opacity: 1;\n        @include transition(all .3s ease-out);\n        @include transition-delay(.3s); } } }\n\n\n  & + #nav-component + #grid-component,\n  & + #nav-component {\n    @include filter(blur(6px)); } }\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///client/client/stylesheets/components/_gallery.sass\n **/","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///client/~/bourbon/app/assets/stylesheets/css3/_flex-box.scss\n **/","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///client/~/bourbon/app/assets/stylesheets/addons/_prefixer.scss\n **/"],"sourceRoot":""}
